# bot.py

import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from fuzzywuzzy import fuzz
from parser import parse_vk_education_courses

vk_session = vk_api.VkApi(token="vk1.a.rM7jjKpwccx0heaZpDKq5kWOXC3lni6tpOS0NkxJWmPpTwf0RHGOSR9KKfRslDm6V6lHZNobhQj48Fp1Sk_5X2g_htKfHdlrDyfC0ILghiNwYDqd9ry7veRIaMjGnh33mELsyEa1NuiOLVsOQ_0b5ZdObxP1CRUGREfaUY-UWLP3jsaWOlLEiEsXlAg697vR2FanTJXzVdxepcI1vHYWBQ")
vk = vk_session.get_api()
longpoll = VkLongPoll(vk)

courses = parse_vk_education_courses()

bad_words = ["–¥—É—Ä–∞–∫", "—Ç—É–ø–æ–π", "–±–ª", "—Å—É–∫–∞", "—Ö–µ—Ä", "–º–∞—Ç"]  # –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å

def check_mat(text):
    return any(word in text.lower() for word in bad_words)

def send_message(user_id, message, keyboard=None):
    vk.messages.send(
        user_id=user_id,
        message=message,
        random_id=0,
        keyboard=keyboard.get_keyboard() if keyboard else None
    )

def create_keyboard():
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button("–ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç?", color=VkKeyboardColor.PRIMARY)
    keyboard.add_line()
    keyboard.add_button("–ì–¥–µ –Ω–∞–π—Ç–∏ –≤–µ–±–∏–Ω–∞—Ä—ã?", color=VkKeyboardColor.SECONDARY)
    keyboard.add_button("–ö–∞–∫ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ?", color=VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button("–ö–∞–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤?", color=VkKeyboardColor.POSITIVE)
    return keyboard

def search_course_by_name(name):
    for course in courses:
        if fuzz.partial_ratio(course["title"].lower(), name.lower()) > 80:
            return course
    return None

def search_courses_by_audience(word):
    return [c for c in courses if word.lower() in c["audience"].lower()]

def search_courses_by_topic(keyword):
    return [c for c in courses if keyword.lower() in c["topics"].lower()]

def handle_question(text):
    text = text.strip().lower()

    if check_mat(text):
        return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–Ω üõë"

    if "–ø—Ä–∏–≤–µ—Ç" in text:
        return "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –æ—Ç VK Education. –ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É üëá"

    if "–∫–∞–∫ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç" in text:
        return "–ü–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç https://education.vk.company/students#courses –∏ –≤—ã–±–µ—Ä–∏ —Ç–æ—Ç, —á—Ç–æ —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω!"

    if "–∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ" in text:
        return "–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏–∫—Ä–µ–ø–∏ —Ñ–∞–π–ª –≤ –∫–æ–Ω—Ü–µ –∑–∞–Ω—è—Ç–∏—è –Ω–∞ —Å–∞–π—Ç–µ VK Education."

    if "–≤–µ–±–∏–Ω–∞—Ä" in text:
        return "–ó–∞–ø–∏—Å–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –≤ Telegram-–∫–∞–Ω–∞–ª–µ VK Education."

    if "–¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤" in text:
        found = search_courses_by_audience("—Å—Ç—É–¥–µ–Ω—Ç")
        if found:
            return "–í–æ—Ç –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:\n" + "\n".join([f"‚Ä¢ {c['title']}" for c in found])
        return "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ üòï"

    if "—Ñ–æ—Ä–º–∞—Ç" in text:
        for course in courses:
            if fuzz.partial_ratio(course["title"].lower(), text) > 80:
                return f"–§–æ—Ä–º–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞ ¬´{course['title']}¬ª: {course['format']}"
        return "–ù–µ –Ω–∞—à—ë–ª —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞."

    if "—Å—Ä–æ–∫" in text or "–¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å" in text:
        for course in courses:
            if fuzz.partial_ratio(course["title"].lower(), text) > 80:
                return f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ ¬´{course['title']}¬ª: {course['duration']}"
        return "–ù–µ –Ω–∞—à—ë–ª –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞."

    if "—Ç–µ–º—ã" in text or "–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ" in text:
        for course in courses:
            if fuzz.partial_ratio(course["title"].lower(), text) > 80:
                return f"–¢–µ–º—ã –ø—Ä–æ–µ–∫—Ç–∞ ¬´{course['title']}¬ª: {course['topics']}"
        return "–ù–µ –Ω–∞—à—ë–ª –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–º –ø—Ä–æ–µ–∫—Ç–∞."

    if any(word in text for word in ["—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥", "frontend", "–∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç", "ai", "–¥–∏–∑–∞–π–Ω", "–¥–∞–Ω–Ω—ã–µ"]):
        keyword = text
        found = search_courses_by_topic(keyword)
        if found:
            return "–í–æ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫—É—Ä—Å—ã –ø–æ —Ç–≤–æ–µ–π —Ç–µ–º–µ:\n" + "\n".join([f"‚Ä¢ {c['title']}" for c in found])
        return "–ù–µ –Ω–∞—à—ë–ª –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫—É—Ä—Å–æ–≤ –ø–æ —ç—Ç–æ–π —Ç–µ–º–µ."

    return "–ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å ü§î –ü–æ–ø—Ä–æ–±—É–π –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ!"

# --- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ---
keyboard = create_keyboard()

for event in longpoll.listen():
    if event.type == VkEventType.MESSAGE_NEW and event.to_me:
        user_id = event.user_id
        msg = event.text
        answer = handle_question(msg)
        send_message(user_id, answer, keyboard=keyboard)
